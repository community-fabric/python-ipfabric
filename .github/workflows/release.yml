# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    if: |
      github.repository == 'community-fabric/python-ipfabric' &&
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
    name: Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Poetry
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: 1.2.0
      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true
          poetry config experimental.new-installer false
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Run functional tests
        if: "!contains(github.ref, 'beta')"
        env:
          IPF_URL: ${{ secrets.IPF_URL }}
          IPF_TOKEN: ${{ secrets.IPF_TOKEN }}
        run: poetry run python -m pytest tests/functional

  publish:
    runs-on: ubuntu-latest
    name: Publish to PyPi
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python Poetry
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: 1.2.0
      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true
          poetry config experimental.new-installer false
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Set env
        run: echo RELEASE_VERSION=${GITHUB_REF:10} >> $GITHUB_ENV
      - name: Run Poetry Version
        run: poetry version $RELEASE_VERSION
      - name: Run Poetry Build
        run: poetry build
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          file: dist/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
      - name: Push to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI }}
    needs:
      - test
  notify:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get version from tag
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
        shell: bash

      - name: Notify on Slack
        uses: openhousepvt/slack@v1.3.2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          platform: 'PYPI'
          version: ${{ steps.version.outputs.version }}
        if: success()
      - name: Notify on Community Slack
        uses: openhousepvt/slack@v1.3.2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_COMMUNITY_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          platform: 'PYPI'
          version: ${{ steps.version.outputs.version }}
        if: success()
    needs:
      - publish
